//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp2.HDFCServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://hdfcergo.com/", ConfigurationName="HDFCServiceReference.PaymentUtilitiesSoap")]
    public interface PaymentUtilitiesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/GenerateRequestChecksum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateRequestChecksum(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/GenerateRequestChecksum", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateRequestChecksumAsync(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/Encrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Encrypt(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source, string Checksum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/Encrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EncryptAsync(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source, string Checksum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/Decrypt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Decrypt(string cipherText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/Decrypt", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DecryptAsync(string cipherText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/GenerateResponseChecksum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateResponseChecksum(string cipherText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hdfcergo.com/GenerateResponseChecksum", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateResponseChecksumAsync(string cipherText);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PaymentUtilitiesSoapChannel : ConsoleApp2.HDFCServiceReference.PaymentUtilitiesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentUtilitiesSoapClient : System.ServiceModel.ClientBase<ConsoleApp2.HDFCServiceReference.PaymentUtilitiesSoap>, ConsoleApp2.HDFCServiceReference.PaymentUtilitiesSoap {
        
        public PaymentUtilitiesSoapClient() {
        }
        
        public PaymentUtilitiesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaymentUtilitiesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentUtilitiesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentUtilitiesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GenerateRequestChecksum(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source) {
            return base.Channel.GenerateRequestChecksum(TransactionNo, TotalAmount, AppID, SubscriptionID, SuccessUrl, FailureUrl, Source);
        }
        
        public System.Threading.Tasks.Task<string> GenerateRequestChecksumAsync(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source) {
            return base.Channel.GenerateRequestChecksumAsync(TransactionNo, TotalAmount, AppID, SubscriptionID, SuccessUrl, FailureUrl, Source);
        }
        
        public string Encrypt(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source, string Checksum) {
            return base.Channel.Encrypt(TransactionNo, TotalAmount, AppID, SubscriptionID, SuccessUrl, FailureUrl, Source, Checksum);
        }
        
        public System.Threading.Tasks.Task<string> EncryptAsync(string TransactionNo, string TotalAmount, string AppID, string SubscriptionID, string SuccessUrl, string FailureUrl, string Source, string Checksum) {
            return base.Channel.EncryptAsync(TransactionNo, TotalAmount, AppID, SubscriptionID, SuccessUrl, FailureUrl, Source, Checksum);
        }
        
        public string Decrypt(string cipherText) {
            return base.Channel.Decrypt(cipherText);
        }
        
        public System.Threading.Tasks.Task<string> DecryptAsync(string cipherText) {
            return base.Channel.DecryptAsync(cipherText);
        }
        
        public string GenerateResponseChecksum(string cipherText) {
            return base.Channel.GenerateResponseChecksum(cipherText);
        }
        
        public System.Threading.Tasks.Task<string> GenerateResponseChecksumAsync(string cipherText) {
            return base.Channel.GenerateResponseChecksumAsync(cipherText);
        }
    }
}
